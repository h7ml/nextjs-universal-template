name: Deploy to Deno Deploy

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Build Next.js for Deno
        id: build
        run: pnpm build
        env:
          DENO: 1
          NODE_ENV: production
          # 占位符，避免导入数据库模块时失败（不会真实连接）
          DATABASE_URL: postgresql://placeholder:placeholder@localhost:5432/placeholder
          # JWT_SECRET 占位符（构建时需要）
          JWT_SECRET: placeholder-secret-key-for-build-only-min-32-chars-long

      - name: Upload build artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: |
            .next
            public
          retention-days: 1
          if-no-files-found: warn

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build
          path: .

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.json', 'deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Cache Deno imports
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-deno-imports-${{ hashFiles('deno.json') }}
          restore-keys: |
            ${{ runner.os }}-deno-imports-

      - name: Check Deno Deploy secrets
        id: check-secrets
        continue-on-error: true
        run: |
          if [ -z "${{ secrets.DENO_DEPLOY_TOKEN }}" ] || [ -z "${{ secrets.DENO_DEPLOY_PROJECT_ID }}" ]; then
            echo "has_secrets=false" >> $GITHUB_OUTPUT
          else
            echo "has_secrets=true" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Deno Deploy
        if: steps.check-secrets.outputs.has_secrets == 'true'
        continue-on-error: true
        uses: denoland/deployctl@v1
        with:
          project: ${{ secrets.DENO_DEPLOY_PROJECT_ID }}
          entrypoint: deno_server.ts
          import-map: deno.json
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
